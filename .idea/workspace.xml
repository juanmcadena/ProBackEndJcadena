<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cae4905e-e30b-40bd-8cf8-b5047e7347f9" name="Changes" comment="Create Video Repository Test">
      <change afterPath="$PROJECT_DIR$/src/main/java/culturemedia/controllers/CultureMediaController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/culturemedia/service/CulturemediaService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/culturemedia/service/CultureMediaService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/culturemedia/service/impl/CulturemediaServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/culturemedia/service/impl/CultureMediaServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/culturemedia/service/CulturemediaServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/culturemedia/service/CulturemediaServiceTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Record" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;juanmcadena&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="2e4d0373-f3eb-4195-a849-a64c937ee08a" />
        <option name="url" value="https://github.com/juanmcadena/ProBackEndJcadena.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2ew9PJxkJtXQ4IpjQSi066dStS3" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "JUnit.CulturemediaServiceTest.exceptionsTesting.executor": "Run",
    "JUnit.CulturemediaServiceTest.executor": "Run",
    "JUnit.CulturemediaServiceTest.when_FindAll_By_Durations_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully.executor": "Debug",
    "JUnit.CulturemediaServiceTest.when_FindAll_By_Title_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully.executor": "Run",
    "JUnit.CulturemediaServiceTest.when_FindAll_all_videos_should_be_returned_successfully.executor": "Run",
    "JUnit.CulturemediaServiceTest.when_FindAll_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully.executor": "Run",
    "JUnit.VideoRepositoryTest.executor": "Run",
    "JUnit.VideoRepositoryTest.when_FindByDuration_does_not_match_any_video_an_empty_list_should_be_returned_successfully.executor": "Run",
    "JUnit.VideoRepositoryTest.when_FindByDuration_only_videos_between_the_range_should_be_returned_successfully.executor": "Run",
    "JUnit.VideoRepositoryTest.when_FindByTitle_does_not_match_any_video_an_empty_list_should_be_returned_successfully.executor": "Run",
    "JUnit.culturemedia in culturemedia.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "R10-Addingâ€“controller",
    "ignore.virus.scanning.warn.message": "true",
    "jdk.selected.JAVA_MODULE": "openjdk-22",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\JUAN\Documents\5  UDEA\Ingenieria de Sistemas\2024-1 3 er Semestre\Tec Programacio y Laboratorio\Taller 3\Proyecto Backend" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.CulturemediaServiceTest.when_FindAll_By_Durations_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully">
    <configuration name="CulturemediaServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="culturemedia" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="culturemedia.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="culturemedia.service" />
      <option name="MAIN_CLASS_NAME" value="culturemedia.service.CulturemediaServiceTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CulturemediaServiceTest.exceptionsTesting" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="culturemedia" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="culturemedia.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="culturemedia.service" />
      <option name="MAIN_CLASS_NAME" value="culturemedia.service.CulturemediaServiceTest" />
      <option name="METHOD_NAME" value="exceptionsTesting" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CulturemediaServiceTest.when_FindAll_By_Durations_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="culturemedia" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="culturemedia.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="culturemedia.service" />
      <option name="MAIN_CLASS_NAME" value="culturemedia.service.CulturemediaServiceTest" />
      <option name="METHOD_NAME" value="when_FindAll_By_Durations_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CulturemediaServiceTest.when_FindAll_By_Title_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="culturemedia" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="culturemedia.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="culturemedia.service" />
      <option name="MAIN_CLASS_NAME" value="culturemedia.service.CulturemediaServiceTest" />
      <option name="METHOD_NAME" value="when_FindAll_By_Title_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CulturemediaServiceTest.when_FindAll_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="culturemedia" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="culturemedia.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="culturemedia.service" />
      <option name="MAIN_CLASS_NAME" value="culturemedia.service.CulturemediaServiceTest" />
      <option name="METHOD_NAME" value="when_FindAll_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.CulturemediaServiceTest.when_FindAll_By_Durations_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" />
        <item itemvalue="JUnit.CulturemediaServiceTest.when_FindAll_By_Title_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" />
        <item itemvalue="JUnit.CulturemediaServiceTest.when_FindAll_does_not_find_any_video_an_VideoNotFoundException_should_be_thrown_successfully" />
        <item itemvalue="JUnit.CulturemediaServiceTest" />
        <item itemvalue="JUnit.CulturemediaServiceTest.exceptionsTesting" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-22-openjdk-22-4caba194b151-f504ca98" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cae4905e-e30b-40bd-8cf8-b5047e7347f9" name="Changes" comment="" />
      <created>1712804748072</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712804748072</updated>
      <workItem from="1712804749901" duration="6589000" />
      <workItem from="1713840561511" duration="844000" />
    </task>
    <task id="LOCAL-00001" summary="Create Video Repository Test">
      <option name="closed" value="true" />
      <created>1713494711190</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1713494711191</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Create Video Repository Test" />
    <option name="LAST_COMMIT_MESSAGE" value="Create Video Repository Test" />
  </component>
</project>